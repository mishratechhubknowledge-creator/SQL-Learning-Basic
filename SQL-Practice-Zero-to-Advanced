Last login: Sun Aug 17 13:53:28 on ttys000
vijay@vijaynaths-MacBook-Air ~ % mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 10
Server version: 9.4.0 Homebrew

Copyright (c) 2000, 2025, Oracle and/or its affiliates.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

mysql> CREATE DATABASE mishra_tech_hub;
Query OK, 1 row affected (0.041 sec)

mysql> USE mishra_tech_hub;
Database changed
mysql> CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY,name VARCHAR(50) NOT NULL,email VARCHAR(50) UNIQUE NOT NULL,age INT,created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
Query OK, 0 rows affected (0.044 sec)

mysql> CREATE TABLE products (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     name VARCHAR(50) NOT NULL,
    ->     price DECIMAL(10,2) NOT NULL
    -> );
Query OK, 0 rows affected (0.010 sec)

mysql> INSERT INTO users (name, email, age) VALUES
    -> ('Vijay', 'vijay@mishratech.com', 25),
    -> ('Rohan', 'rohan@mishratech.com', 22);
Query OK, 2 rows affected (0.013 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> INSERT INTO products (name, price) VALUES
    -> ('Laptop', 50000),
    -> ('Keyboard', 1200);
Query OK, 2 rows affected (0.006 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM users;
+----+-------+----------------------+------+---------------------+
| id | name  | email                | age  | created_at          |
+----+-------+----------------------+------+---------------------+
|  1 | Vijay | vijay@mishratech.com |   25 | 2025-08-17 14:12:56 |
|  2 | Rohan | rohan@mishratech.com |   22 | 2025-08-17 14:12:56 |
+----+-------+----------------------+------+---------------------+
2 rows in set (0.003 sec)

mysql> SELECT name, email FROM users;
+-------+----------------------+
| name  | email                |
+-------+----------------------+
| Vijay | vijay@mishratech.com |
| Rohan | rohan@mishratech.com |
+-------+----------------------+
2 rows in set (0.001 sec)

mysql> SELECT * FROM users WHERE age > 23;
+----+-------+----------------------+------+---------------------+
| id | name  | email                | age  | created_at          |
+----+-------+----------------------+------+---------------------+
|  1 | Vijay | vijay@mishratech.com |   25 | 2025-08-17 14:12:56 |
+----+-------+----------------------+------+---------------------+
1 row in set (0.001 sec)

mysql> SELECT * FROM products ORDER BY price DESC;
+----+----------+----------+
| id | name     | price    |
+----+----------+----------+
|  1 | Laptop   | 50000.00 |
|  2 | Keyboard |  1200.00 |
+----+----------+----------+
2 rows in set (0.001 sec)

mysql> SELECT * FROM users ORDER BY age ASC LIMIT 1;
+----+-------+----------------------+------+---------------------+
| id | name  | email                | age  | created_at          |
+----+-------+----------------------+------+---------------------+
|  2 | Rohan | rohan@mishratech.com |   22 | 2025-08-17 14:12:56 |
+----+-------+----------------------+------+---------------------+
1 row in set (0.007 sec)

mysql> SELECT COUNT(*) AS total_users FROM users;
+-------------+
| total_users |
+-------------+
|           2 |
+-------------+
1 row in set (0.005 sec)

mysql> SELECT AVG(age) AS average_age, MAX(age) AS oldest_user FROM users;
+-------------+-------------+
| average_age | oldest_user |
+-------------+-------------+
|     23.5000 |          25 |
+-------------+-------------+
1 row in set (0.005 sec)

mysql> CREATE TABLE orders (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     user_id INT,
    ->     product_id INT,
    ->     quantity INT,
    ->     order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    -> );
Query OK, 0 rows affected (0.059 sec)

mysql> INSERT INTO orders (user_id, product_id, quantity) VALUES
    -> (1, 1, 1),
    -> (1, 2, 2),
    -> (2, 1, 1);
Query OK, 3 rows affected (0.015 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT user_id, SUM(quantity) AS total_items
    -> FROM orders
    -> GROUP BY user_id;
+---------+-------------+
| user_id | total_items |
+---------+-------------+
|       1 |           3 |
|       2 |           1 |
+---------+-------------+
2 rows in set (0.009 sec)

mysql> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM orders o
    -> INNER JOIN users u ON o.user_id = u.id
    -> INNER JOIN products p ON o.product_id = p.id;
+-----------+--------------+----------+
| user_name | product_name | quantity |
+-----------+--------------+----------+
| Vijay     | Laptop       |        1 |
| Vijay     | Keyboard     |        2 |
| Rohan     | Laptop       |        1 |
+-----------+--------------+----------+
3 rows in set (0.004 sec)

mysql> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> LEFT JOIN products p ON o.product_id = p.id;
+-----------+--------------+----------+
| user_name | product_name | quantity |
+-----------+--------------+----------+
| Vijay     | Keyboard     |        2 |
| Vijay     | Laptop       |        1 |
| Rohan     | Laptop       |        1 |
+-----------+--------------+----------+
3 rows in set (0.001 sec)

mysql> SELECT name FROM users
    -> WHERE id IN (
    ->     SELECT user_id
    ->     FROM orders
    ->     GROUP BY user_id
    ->     HAVING SUM(quantity) > 2
    -> );
+-------+
| name  |
+-------+
| Vijay |
+-------+
1 row in set (0.004 sec)

mysql> CREATE VIEW user_orders AS
    -> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM users u
    -> JOIN orders o ON u.id = o.user_id
    -> JOIN products p ON o.product_id = p.id;
Query OK, 0 rows affected (0.008 sec)

mysql> SELECT * FROM user_orders;
+-----------+--------------+----------+
| user_name | product_name | quantity |
+-----------+--------------+----------+
| Vijay     | Laptop       |        1 |
| Vijay     | Keyboard     |        2 |
| Rohan     | Laptop       |        1 |
+-----------+--------------+----------+
3 rows in set (0.002 sec)

mysql> CREATE INDEX idx_email ON users(email);
Query OK, 0 rows affected (0.032 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE users
    -> ADD CONSTRAINT chk_age CHECK (age >= 18);
Query OK, 2 rows affected (0.033 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE orders
    -> ADD CONSTRAINT fk_user FOREIGN KEY (user_id) REFERENCES users(id),
    -> ADD CONSTRAINT fk_product FOREIGN KEY (product_id) REFERENCES products(id);
Query OK, 3 rows affected (0.030 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> CREATE TABLE user_order_summary AS
    -> SELECT u.id AS user_id, u.name AS user_name, COUNT(o.id) AS total_orders, SUM(o.quantity) AS total_items
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> GROUP BY u.id, u.name;
Query OK, 2 rows affected (0.011 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM user_order_summary;
+---------+-----------+--------------+-------------+
| user_id | user_name | total_orders | total_items |
+---------+-----------+--------------+-------------+
|       1 | Vijay     |            2 |           3 |
|       2 | Rohan     |            1 |           1 |
+---------+-----------+--------------+-------------+
2 rows in set (0.001 sec)

mysql> CREATE TABLE categories (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     name VARCHAR(50) NOT NULL
    -> );
Query OK, 0 rows affected (0.008 sec)

mysql> CREATE TABLE payments (
    ->     id INT AUTO_INCREMENT PRIMARY KEY,
    ->     order_id INT NOT NULL,
    ->     amount DECIMAL(10,2) NOT NULL,
    ->     payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ->     payment_method VARCHAR(20),
    ->     FOREIGN KEY (order_id) REFERENCES orders(id)
    -> );
Query OK, 0 rows affected (0.018 sec)

mysql> 
mysql> INSERT INTO categories (name) VALUES ('Electronics'), ('Books'), ('Clothing');
Query OK, 3 rows affected (0.004 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO payments (order_id, amount, payment_method) VALUES
    -> (1, 50000, 'Credit Card'),
    -> (2, 2400, 'UPI'),
    -> (3, 1200, 'Cash');
Query OK, 3 rows affected (0.004 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> SELECT u.name AS user_name, p.name AS product_name, c.name AS category_name, pay.amount, pay.payment_method
    -> FROM orders o
    -> JOIN users u ON o.user_id = u.id
    -> JOIN products p ON o.product_id = p.id
    -> JOIN categories c ON p.id = c.id  -- assuming product category id = category id
    -> LEFT JOIN payments pay ON o.id = pay.order_id;
+-----------+--------------+---------------+----------+----------------+
| user_name | product_name | category_name | amount   | payment_method |
+-----------+--------------+---------------+----------+----------------+
| Vijay     | Laptop       | Electronics   | 50000.00 | Credit Card    |
| Rohan     | Laptop       | Electronics   |  1200.00 | Cash           |
| Vijay     | Keyboard     | Books         |  2400.00 | UPI            |
+-----------+--------------+---------------+----------+----------------+
3 rows in set (0.003 sec)

mysql> SELECT name FROM users
    -> WHERE id IN (
    ->     SELECT user_id FROM orders o
    ->     JOIN payments pay ON o.id = pay.order_id
    ->     GROUP BY user_id
    ->     HAVING SUM(pay.amount) > 5000
    -> );
+-------+
| name  |
+-------+
| Vijay |
+-------+
1 row in set (0.002 sec)

mysql> ALTER TABLE users ADD COLUMN phone VARCHAR(15);
Query OK, 0 rows affected (0.031 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> UPDATE users SET phone = '9876543210' WHERE name = 'Vijay';
Query OK, 1 row affected (0.003 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> ALTER TABLE users DROP COLUMN age;
Query OK, 0 rows affected (0.015 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE payments ADD CONSTRAINT chk_amount CHECK (amount > 0);
Query OK, 3 rows affected (0.029 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> CREATE VIEW user_payment_summary AS
    -> SELECT u.id AS user_id, u.name AS user_name, COUNT(o.id) AS total_orders, SUM(pay.amount) AS total_spent
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> LEFT JOIN payments pay ON o.id = pay.order_id
    -> GROUP BY u.id, u.name;
Query OK, 0 rows affected (0.003 sec)

mysql> SELECT * FROM user_payment_summary;
+---------+-----------+--------------+-------------+
| user_id | user_name | total_orders | total_spent |
+---------+-----------+--------------+-------------+
|       1 | Vijay     |            2 |    52400.00 |
|       2 | Rohan     |            1 |     1200.00 |
+---------+-----------+--------------+-------------+
2 rows in set (0.004 sec)

mysql> CREATE TABLE denormalized_user_orders AS
    -> SELECT u.id AS user_id, u.name AS user_name, o.id AS order_id, p.name AS product_name, pay.amount AS payment_amount, pay.payment_method
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> LEFT JOIN products p ON o.product_id = p.id
    -> LEFT JOIN payments pay ON o.id = pay.order_id;
Query OK, 3 rows affected (0.010 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> 
mysql> SELECT * FROM denormalized_user_orders;
+---------+-----------+----------+--------------+----------------+----------------+
| user_id | user_name | order_id | product_name | payment_amount | payment_method |
+---------+-----------+----------+--------------+----------------+----------------+
|       1 | Vijay     |        2 | Keyboard     |        2400.00 | UPI            |
|       1 | Vijay     |        1 | Laptop       |       50000.00 | Credit Card    |
|       2 | Rohan     |        3 | Laptop       |        1200.00 | Cash           |
+---------+-----------+----------+--------------+----------------+----------------+
3 rows in set (0.001 sec)

mysql> INSERT INTO users (name, email, phone) VALUES
    -> ('Anjali', 'anjali@mishratech.com', '9123456780'),
    -> ('Rahul', 'rahul@mishratech.com', '9234567890');
Query OK, 2 rows affected (0.002 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> INSERT INTO products (name, price) VALUES
    -> ('Mouse', 800),
    -> ('Book', 350),
    -> ('T-Shirt', 500);
Query OK, 3 rows affected (0.002 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> INSERT INTO orders (user_id, product_id, quantity) VALUES
    -> (3, 2, 3), -- Anjali ordered 3 books
    -> (4, 3, 2);
Query OK, 2 rows affected (0.002 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> INSERT INTO payments (order_id, amount, payment_method) VALUES
    -> (4, 1050, 'Credit Card'),
    -> (5, 1000, 'UPI');
Query OK, 2 rows affected (0.001 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> LEFT JOIN products p ON o.product_id = p.id;
+-----------+--------------+----------+
| user_name | product_name | quantity |
+-----------+--------------+----------+
| Vijay     | Laptop       |        1 |
| Vijay     | Keyboard     |        2 |
| Rohan     | Laptop       |        1 |
| Anjali    | Keyboard     |        3 |
| Rahul     | Mouse        |        2 |
+-----------+--------------+----------+
5 rows in set (0.001 sec)

mysql> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM users u
    -> RIGHT JOIN orders o ON u.id = o.user_id
    -> RIGHT JOIN products p ON o.product_id = p.id;
+-----------+--------------+----------+
| user_name | product_name | quantity |
+-----------+--------------+----------+
| Vijay     | Laptop       |        1 |
| Rohan     | Laptop       |        1 |
| Vijay     | Keyboard     |        2 |
| Anjali    | Keyboard     |        3 |
| Rahul     | Mouse        |        2 |
| NULL      | Book         |     NULL |
| NULL      | T-Shirt      |     NULL |
+-----------+--------------+----------+
7 rows in set (0.001 sec)

mysql> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM users u
    -> FULL OUTER JOIN orders o ON u.id = o.user_id
    -> FULL OUTER JOIN products p ON o.product_id = p.id;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN orders o ON u.id = o.user_id
FULL OUTER JOIN products p ON o.pro' at line 3
mysql> SELECT u.name AS user_name, p.name AS product_name, o.quantity
    -> FROM users u
    -> FULL OUTER JOIN orders o ON u.id = o.user_id
    -> FULL OUTER JOIN products p ON o.product_id = p.id;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'FULL OUTER JOIN orders o ON u.id = o.user_id
FULL OUTER JOIN products p ON o.pro' at line 3
mysql> CREATE VIEW user_total_spent AS
    -> SELECT u.id AS user_id, u.name AS user_name, SUM(pay.amount) AS total_spent
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> LEFT JOIN payments pay ON o.id = pay.order_id
    -> GROUP BY u.id, u.name;
Query OK, 0 rows affected (0.006 sec)

mysql> SELECT * FROM user_total_spent;
+---------+-----------+-------------+
| user_id | user_name | total_spent |
+---------+-----------+-------------+
|       1 | Vijay     |    52400.00 |
|       2 | Rohan     |     1200.00 |
|       3 | Anjali    |     1050.00 |
|       4 | Rahul     |     1000.00 |
+---------+-----------+-------------+
4 rows in set (0.003 sec)

mysql> CREATE VIEW product_order_summary AS
    -> SELECT p.id AS product_id, p.name AS product_name, SUM(o.quantity) AS total_quantity
    -> FROM products p
    -> LEFT JOIN orders o ON p.id = o.product_id
    -> GROUP BY p.id, p.name;
Query OK, 0 rows affected (0.004 sec)

mysql> SELECT * FROM product_order_summary;
+------------+--------------+----------------+
| product_id | product_name | total_quantity |
+------------+--------------+----------------+
|          1 | Laptop       |              2 |
|          2 | Keyboard     |              5 |
|          3 | Mouse        |              2 |
|          4 | Book         |           NULL |
|          5 | T-Shirt      |           NULL |
+------------+--------------+----------------+
5 rows in set (0.002 sec)

mysql> CREATE TABLE denormalized_orders AS
    -> SELECT u.id AS user_id, u.name AS user_name, o.id AS order_id,
    ->        p.name AS product_name, o.quantity, pay.amount AS payment_amount,
    ->        pay.payment_method
    -> FROM users u
    -> LEFT JOIN orders o ON u.id = o.user_id
    -> LEFT JOIN products p ON o.product_id = p.id
    -> LEFT JOIN payments pay ON o.id = pay.order_id;
Query OK, 5 rows affected (0.011 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM denormalized_orders;
+---------+-----------+----------+--------------+----------+----------------+----------------+
| user_id | user_name | order_id | product_name | quantity | payment_amount | payment_method |
+---------+-----------+----------+--------------+----------+----------------+----------------+
|       1 | Vijay     |        1 | Laptop       |        1 |       50000.00 | Credit Card    |
|       1 | Vijay     |        2 | Keyboard     |        2 |        2400.00 | UPI            |
|       2 | Rohan     |        3 | Laptop       |        1 |        1200.00 | Cash           |
|       3 | Anjali    |        4 | Keyboard     |        3 |        1050.00 | Credit Card    |
|       4 | Rahul     |        5 | Mouse        |        2 |        1000.00 | UPI            |
+---------+-----------+----------+--------------+----------+----------------+----------------+
5 rows in set (0.001 sec)

mysql> ALTER TABLE products ADD COLUMN stock INT DEFAULT 100;
Query OK, 0 rows affected (0.013 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> UPDATE products SET stock = 90 WHERE name = 'Book';
Query OK, 1 row affected (0.002 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT name FROM users
    -> WHERE id IN (
    ->     SELECT user_id FROM orders o
    ->     JOIN payments pay ON o.id = pay.order_id
    ->     GROUP BY user_id
    ->     HAVING SUM(pay.amount) > 1000
    -> );
+--------+
| name   |
+--------+
| Vijay  |
| Rohan  |
| Anjali |
+--------+
3 rows in set (0.002 sec)

mysql> ALTER TABLE products
    -> ADD CONSTRAINT chk_stock CHECK (stock >= 0);
Query OK, 5 rows affected (0.028 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> 
